{"version":3,"sources":["app/Components/Header/SearchBar.jsx","constants.js","app/Reducers/fetchMovies.js","app/Reducers/movieModal.js","app/Reducers/filters.js","app/Reducers/favoriteMovies.js","app/Reducers/pagination.js","app/Reducers/searchInput.js","app/Reducers/sidePanel.js","app/Reducers/index.js","store.js","app/Actions/pagination.js","app/Actions/fetchMovies.js","app/Actions/movieModal.js","app/Actions/favoriteMovies.js","app/Actions/filters.js","app/Containers/SearchBarContainer/SearchBarContainer.jsx","app/Actions/searchInput.js","app/Components/Header/Title.jsx","app/Containers/Header/TitleContainer.jsx","app/Components/Header/Header.jsx","app/Components/SidePanel/MovieFiltersItem.jsx","app/Containers/SidePanel/MovieFilters.jsx","app/Components/SidePanel/SomeBlock.jsx","app/Components/SidePanel/SidePanel.jsx","app/Components/MovieShowCase/MovieCard.jsx","app/Containers/FilmCardsContainer/FilmCardsContainer.jsx","app/Components/Pagination/Pagination.jsx","utils/range.js","utils/getPageLayout.js","app/Containers/Pagination/PaginationContainer.jsx","app/Components/MovieShowCase/MovieShowCase.jsx","utils/getNormalDuration.js","utils/getNormalRevenueValue.js","app/Components/MovieInfoPage/MovieInfoPage.jsx","app/Components/MainContent/Loader.jsx","app/Components/MainContent/Error.jsx","app/Components/ShowSidePanelButton/ShowSidePanelButton.jsx","app/Actions/sidePanel.js","app/Containers/ShowSidePanelButtonContainer/ShowSidePanelButtonContainer.jsx","app/Containers/MainContent/MainContent.jsx","app/Containers/App/App.jsx","serviceWorker.js","index.js"],"names":["SearchBar","_ref","value","onChange","onSubmit","react_default","a","createElement","className","role","autoComplete","htmlFor","index_es","icon","faSearch","type","e","target","id","placeholder","MOVIES_FETCH","MOVIE_FETCH","FAVORITE","PAGINATION","SIDE_PANEL","FETCH_MOVIES_DATA","FETCHED_DATA","RECEIVE_ERROR","initialState","fetchedData","isFetching","isErrored","movieFilter","fetchMovies","state","arguments","length","undefined","action","Object","objectSpread","data","reduce","prev","curr","OPEN_MOVIE_MODAL","FETCH_MOVIE_DATA","CLOSE_MOVIE_MODAL","FETCH_CREDITS","SHOW_ERROR","isOpen","movieDetails","movieModal","movieId","filters","filter","ADD_MOVIE","GO_TO_FAVORITES","CLOSE_FAVORITE","REMOVE_FROM_FAVORITE","isFavoritesOpen","activeBookMarks","favoriteMovies","defineProperty","ui","concat","toConsumableArray","keys","GO_TO_NEXT_PAGE","GO_BACK_TO_PAGE","GO_TO_CHOSEN_PAGE","SET_TOTAL_PAGES","RESET_PAGE","currentPage","totalPages","pageNeighboursNumber","pagination","Math","min","max","searchInput","SET_VISIBILITY","sidePanel","page","combineReducers","movies","movie","favorite","pageState","isSidePanelShown","rootReducer","getFavoriteMovies","activeIds","slice","getPagesNumbers","bookMarksLength","ceil","store","createStore","applyMiddleware","thunk","logger","setTotalPages","resetCurrentPage","showError","thunkFetchMoviesAction","url","input","replace","dispatch","getState","fullUrl","console","log","fetch","then","res","json","err","results","editedData","map","el","title","poster","poster_path","rating","vote_average","getfetchedData","total_pages","closeMovieModal","fetchThunkMovie","background","backdrop_path","video","videos","key","plot","overview","votes","vote_count","genre","genres","name","join","extPlot","releaseData","release_date","revenue","runtime","imdbId","imdb_id","fetchMovie","catch","fetchThunkMovieCredits","stars","cast","directors","crew","fetchCredits","closeFavorite","setMovieFilter","connect","typeInput","closeModal","setFilter","setInput","setSearchInput","_useState","useState","_useState2","slicedToArray","Header_SearchBar","preventDefault","Title","onClick","react_router_dom","to","activeStyle","width","display","textDecoration","fetchData","Header_Title","Header","Header_TitleContainer","Containers_SearchBarContainer_SearchBarContainer","MovieFiltersItem","toLowerCase","split","style","opacity","faArrowRight","New Releases","Trending","Coming Soon","Favourites","MovieFilters","this","props","closest","classList","contains","dispatchFuncs","setPagesNumbers","pagesNumber","goToFavorite","_this","handleClick","SidePanel_MovieFiltersItem","uuid","v4","React","Component","SomeBlock","isShown","barStyle","SidePanel_MovieFilters","SidePanel_SomeBlock","MovieCard","onBookmarkClick","isBookMarkAdded","rateMarkColor","backgroundColor","faBookmark","color","src","alt","FilmCardsContainer","handleBookMarkClick","isActive","removeFromFavorite","addToFavorite","_this2","_this$props","fetchedMovies","fetchMovieCredits","MovieShowCase_MovieCard","includes","Pagination","pagesLayout","pageData","Fragment","aria-label","i","data-id","btnActive","range","start","end","step","arr","push","getPagesLayout","_ref$currentPage","_ref$pageNeighboursNu","_ref$totalPages","totalNumbers","leftBound","rightBound","beforeLastPage","startPage","endPage","pages","paginOffset","hasSpillLeft","hasSpillRight","extraPages","Watch Later","PaginationContainer","handleClicks","dataset","goToPrevious","goToNext","goToChosen","getPageLayout","Components_Pagination_Pagination","goToChosenPage","partUrl","Containers_FilmCardsContainer_FilmCardsContainer","Pagination_PaginationContainer","getNormalDuration","num","hour","floor","getNormalRevenueValue","valueStr","reverse","MovieInfoPage","frameBorder","allow","allowFullScreen","href","rel","class","defaultProps","Loader","Error","ShowSidePanelButton","faTimes","faBars","setVisibility","setSidePanelVisivility","setIsShown","Components_ShowSidePanelButton_ShowSidePanelButton","movieData","MainContent_Loader","MainContent_Error","Containers_ShowSidePanelButtonContainer_ShowSidePanelButtonContainer","Components_SidePanel_SidePanel","Components_MovieInfoPage_MovieInfoPage","Components_MovieShowCase_MovieShowCase","App","Components_Header_Header","Containers_MainContent_MainContent","Boolean","window","location","hostname","match","ReactDOM","render","es","react_router","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.85718fd6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst SearchBar = ({ value, onChange, onSubmit }) => {\r\n  return (\r\n    <div className=\"search-bar-container\">\r\n      <form className=\"search-bar\" onSubmit={onSubmit} role=\"search\" autoComplete=\"false\" >\r\n\r\n        <label htmlFor=\"search\" />\r\n        <FontAwesomeIcon icon={faSearch} className=\"search-bar__icon\" />\r\n        <input\r\n          type=\"text\"\r\n          className=\"search-bar__input\"\r\n          onChange={e => onChange(e.target.value)}\r\n          id=\"search\"\r\n          value={value}\r\n          placeholder=\"search...\"\r\n        />\r\n        \r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","export const MOVIES_FETCH = {\r\n  FETCH_MOVIES_DATA: \"FETCH_MOVIES_DATA\",\r\n  FETCHED_DATA: \"FETCHED_DATA\",\r\n  RECEIVE_ERROR: \"RECEIVE_ERROR\",\r\n}\r\n\r\nexport const  SET_MOVIES_FILTER = \"SET_MOVIES_FILTER\";\r\n\r\nexport const MOVIE_FETCH = {\r\n  OPEN_MOVIE_MODAL: \"OPEN_MOVIE_MODAL\",\r\n  FETCH_MOVIE_DATA: \"FETCH_MOVIE_DATA\",\r\n  CLOSE_MOVIE_MODAL: \"CLOSE_MOVIE_MODAL\",\r\n  FETCH_CREDITS: \"FETCH_CREDITS\",\r\n  SHOW_ERROR: \"SHOW_ERROR\"\r\n}\r\n\r\nexport const FAVORITE = {\r\n  ADD_MOVIE: \"ADD_MOVIE\",\r\n  GO_TO_FAVORITES: \"GO_TO_FAVORITES\",\r\n  CLOSE_FAVORITE: \"CLOSE_FAVORITE\",\r\n  REMOVE_FROM_FAVORITE: \"REMOVE_FROM_FAVORITE\"\r\n}\r\n\r\nexport const PAGINATION = {\r\n  GO_TO_NEXT_PAGE: \"GO_TO_NEXT_PAGE\",\r\n  GO_BACK_TO_PAGE: \"GO_BACK_TO_PAGE\",\r\n  GO_TO_CHOSEN_PAGE: \"GO_TO_CHOSEN_PAGE\",\r\n  SET_TOTAL_PAGES: \"SET_TOTAL_PAGES\",\r\n  RESET_PAGE: \"RESET_PAGE\"\r\n} \r\n\r\nexport const SIDE_PANEL = {\r\n  SET_VISIBILITY: \"SET_VISIBILITY\"\r\n}\r\n\r\nexport const SET_SEARCH_INPUT = \"SET_SEARCH_INPUT\";","import  { MOVIES_FETCH } from \"../../constants\";\r\n\r\nconst { FETCH_MOVIES_DATA, FETCHED_DATA, RECEIVE_ERROR } = MOVIES_FETCH;\r\n\r\nconst initialState = {\r\n    fetchedData: {},\r\n    isFetching: false,\r\n    isErrored: false,\r\n    movieFilter: \"New Releases\"\r\n}\r\n\r\nconst fetchMovies = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FETCH_MOVIES_DATA:\r\n            return {\r\n                ...state, \r\n                isFetching: true,\r\n                isErrored: false\r\n            }\r\n        case FETCHED_DATA:\r\n            return {\r\n                ...state,\r\n                fetchedData: action.data.reduce((prev, curr) => {\r\n                  prev[curr.id] = curr;\r\n                  return prev;\r\n                }, {}),\r\n                isFetching: false,\r\n                isErrored: false\r\n            }\r\n        case RECEIVE_ERROR:\r\n            return {\r\n                ...state,\r\n                isErrored: true,\r\n                isFetching: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default fetchMovies;","import { MOVIE_FETCH } from \"../../constants\";\r\n\r\nconst {\r\n  OPEN_MOVIE_MODAL,\r\n  FETCH_MOVIE_DATA,\r\n  CLOSE_MOVIE_MODAL,\r\n  FETCH_CREDITS,\r\n  SHOW_ERROR\r\n} = MOVIE_FETCH;\r\n\r\nconst initialState = {\r\n  isOpen: false,\r\n  isFetching: false,\r\n  isErrored: false,\r\n  movieDetails: {}\r\n};\r\n\r\nconst movieModal = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case OPEN_MOVIE_MODAL:\r\n      return {\r\n        ...state,\r\n        isOpen: true,\r\n        isFetching: true,\r\n        isErrored: false,\r\n        movieId: action.movieId\r\n      };\r\n    case FETCH_MOVIE_DATA:\r\n      return {\r\n        ...state,\r\n        movieDetails: {...state.movieDetails, ...action.data}\r\n      };\r\n    case CLOSE_MOVIE_MODAL:\r\n      return {\r\n        ...state,\r\n        isOpen: false,\r\n        isErrored: false\r\n      };\r\n    case FETCH_CREDITS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        movieDetails: {...state.movieDetails, ...action.data}\r\n      }\r\n    case SHOW_ERROR:\r\n      return {\r\n        ...state,\r\n        isErrored: true\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default movieModal;\r\n","import { SET_MOVIES_FILTER } from \"../../constants\";\r\n\r\nconst filters = (state = \"New Releases\", action) => {\r\n  if(action.type === SET_MOVIES_FILTER) {\r\n    return action.filter;\r\n  }\r\n  return state;\r\n}\r\n\r\nexport default filters;","import { FAVORITE } from \"../../constants\";\r\n\r\nconst { ADD_MOVIE, GO_TO_FAVORITES, CLOSE_FAVORITE, REMOVE_FROM_FAVORITE } = FAVORITE;\r\n\r\nconst initialState = {\r\n  data: {},\r\n  isFavoritesOpen: false,\r\n  activeBookMarks: []\r\n}\r\n\r\nconst favoriteMovies = (state = initialState, action) => {\r\n\r\n  switch(action.type) {\r\n    case ADD_MOVIE:\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...state.data,\r\n          [action.data.id]: action.data\r\n        },\r\n        ui: {\r\n          activeBookMarks: [...state.ui.activeBookMarks, action.data.id]\r\n        }\r\n      }\r\n    case REMOVE_FROM_FAVORITE:\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...Object.keys(state.data).reduce((prev, curr) => {\r\n            if(+action.movieId === +curr) return prev;\r\n            prev[curr] = state.data[curr];\r\n            return prev;\r\n          }, {})\r\n        },\r\n        ui: {\r\n          activeBookMarks: state.ui.activeBookMarks.filter(id => id !== action.movieId)\r\n        }\r\n      }\r\n    case GO_TO_FAVORITES:\r\n      return {\r\n        ...state,\r\n        isFavoritesOpen: true\r\n      }\r\n    case CLOSE_FAVORITE: \r\n      return {\r\n        ...state,\r\n        isFavoritesOpen: false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default favoriteMovies;","import { PAGINATION } from \"../../constants\";\r\n\r\nconst {\r\n  GO_TO_NEXT_PAGE,\r\n  GO_BACK_TO_PAGE,\r\n  GO_TO_CHOSEN_PAGE,\r\n  SET_TOTAL_PAGES,\r\n  RESET_PAGE\r\n} = PAGINATION;\r\n\r\nconst initialState = {\r\n  currentPage: 1,\r\n  totalPages: 0,\r\n  pageNeighboursNumber: 2,\r\n};\r\n\r\nconst pagination = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GO_TO_NEXT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: Math.min(\r\n          state.currentPage + state.pageNeighboursNumber * 2 + 1,\r\n          state.totalPages\r\n        )\r\n      };\r\n    case GO_BACK_TO_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: Math.max(\r\n          state.currentPage - state.pageNeighboursNumber * 2 - 1,\r\n          0\r\n        )\r\n      };\r\n    case GO_TO_CHOSEN_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.data\r\n      };\r\n    case SET_TOTAL_PAGES:\r\n      return {\r\n        ...state,\r\n        totalPages: action.data\r\n      };\r\n    case RESET_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: 1\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default pagination;\r\n","import { SET_SEARCH_INPUT } from \"../../constants\";\r\n\r\nconst initialState = \"\";\r\n\r\nconst searchInput = (state = initialState, action) => {\r\n  if(action.type === SET_SEARCH_INPUT) {\r\n    return action.data;\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nexport default searchInput;","import { SIDE_PANEL } from \"../../constants\";\r\n\r\nconst { SET_VISIBILITY } = SIDE_PANEL;\r\n\r\nconst sidePanel = (state = false, action) => {\r\n  if (action.type === SET_VISIBILITY) {\r\n    return action.value\r\n  }\r\n  return state;\r\n}\r\n\r\nexport default sidePanel;","import {combineReducers} from \"redux\";\r\n\r\nimport fetchMovies from \"./fetchMovies\";\r\nimport movieModal from \"./movieModal\";\r\nimport filters from \"./filters\";\r\nimport favoriteMovies from \"./favoriteMovies\";\r\nimport pagination from \"./pagination\";\r\nimport searchInput from \"./searchInput\";\r\nimport sidePanel from \"./sidePanel\";\r\n\r\nconst page = combineReducers({\r\n  movies: fetchMovies, \r\n  movie: movieModal,\r\n  movieFilter: filters,\r\n  favorite: favoriteMovies,\r\n  pageState: pagination,\r\n  searchInput\r\n})\r\n\r\nconst ui = combineReducers({\r\n  isSidePanelShown: sidePanel\r\n})\r\n\r\nconst rootReducer = combineReducers({\r\n  page,\r\n  ui\r\n});\r\n\r\n//retrieving favorite movies depending on what favorite-movies page we are \r\n//currently on\r\nexport const getFavoriteMovies = (state) => {\r\n  const activeIds = state.page.favorite.activeBookMarks;\r\n  const currentPage = state.page.pageState.currentPage;\r\n  \r\n  //20 is number of movie items per page you can change that value on whatever you want;\r\n  const activeIdsToRender = activeIds.slice((currentPage - 1) * 20, currentPage * 20);\r\n\r\n\r\n  const favoriteMovies = activeIdsToRender.reduce((prev, curr) => {\r\n    prev[curr] = state.page.favorite.data[curr];\r\n    return prev;\r\n  }, {});\r\n\r\n  return favoriteMovies;\r\n}\r\n\r\nexport const getPagesNumbers = (state) => {\r\n  const bookMarksLength = state.page.favorite.activeBookMarks.length;\r\n  \r\n  const pagesNumber = Math.ceil(bookMarksLength / 20);\r\n\r\n  return pagesNumber;\r\n}\r\n\r\nexport default rootReducer;","import {createStore, applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\n\r\nimport rootReducer from \"./app/Reducers/index\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk, logger));\r\n\r\nexport default store;","import { PAGINATION } from \"../../constants\";\r\n\r\nconst {\r\n  GO_TO_NEXT_PAGE,\r\n  GO_BACK_TO_PAGE,\r\n  GO_TO_CHOSEN_PAGE,\r\n  SET_TOTAL_PAGES,\r\n  RESET_PAGE\r\n} = PAGINATION;\r\n\r\nexport const goToNextPage = () => {\r\n  return {\r\n    type: GO_TO_NEXT_PAGE\r\n  };\r\n};\r\n\r\nexport const goBackPage = () => {\r\n  return {\r\n    type: GO_BACK_TO_PAGE\r\n  };\r\n};\r\n\r\nexport const goToChosenPage = data => {\r\n  return {\r\n    type: GO_TO_CHOSEN_PAGE,\r\n    data\r\n  };\r\n};\r\n\r\nexport const setTotalPages = data => {\r\n  return {\r\n    type: SET_TOTAL_PAGES,\r\n    data\r\n  };\r\n};\r\n\r\nexport const resetCurrentPage = () => {\r\n  return {\r\n    type: RESET_PAGE\r\n  };\r\n};\r\n","import  { MOVIES_FETCH } from \"../../constants\";\r\n\r\nimport store from \"../../store\";\r\nimport { setTotalPages } from \"./pagination\";\r\n\r\nconst { FETCH_MOVIES_DATA, FETCHED_DATA, RECEIVE_ERROR } = MOVIES_FETCH;\r\n\r\nconst API_KEY = \"e439cc3bb62f4282847a5012c7511e5f\";\r\n\r\nconst fetchMoviesData = () => {\r\n    return {\r\n        type: FETCH_MOVIES_DATA\r\n    };\r\n}\r\n\r\nconst getfetchedData = (data) => {\r\n    return {\r\n        type: FETCHED_DATA,\r\n        data\r\n    };\r\n};\r\n\r\nconst showError = () => {\r\n    return {\r\n        type: RECEIVE_ERROR\r\n    };\r\n};\r\n\r\nexport const thunkFetchMoviesAction = (url, input=\"\") => {\r\n    \r\n    input = input ? `&query=${input.replace(/\\s+/g, \"+\")}` : \"\";\r\n    \r\n    store.dispatch(fetchMoviesData());\r\n\r\n    return (dispatch, getState) => {\r\n      const currentPage = getState().page.pageState.currentPage;\r\n\r\n      const fullUrl = `https://api.themoviedb.org/3/${url}?api_key=${API_KEY}${input}&page=${currentPage}`;\r\n\r\n      console.log(\"fullurl\", fullUrl);\r\n\r\n      return fetch(fullUrl)\r\n        .then(\r\n            res => res.json(),\r\n            err => dispatch(showError())\r\n        )\r\n        .then(data => {\r\n            if(!data.results) {\r\n                dispatch(showError());\r\n            } else {\r\n                const editedData = data.results.map(el => {\r\n                    return {\r\n                        title: el.title,\r\n                        id: el.id,\r\n                        poster: `https://image.tmdb.org/t/p/w500${el.poster_path}`,\r\n                        rating: el.vote_average\r\n                    }\r\n                })\r\n                dispatch(getfetchedData(editedData));\r\n                dispatch(setTotalPages(data.total_pages));\r\n            }\r\n        })\r\n    }\r\n} ","import { MOVIE_FETCH } from \"../../constants\";\r\n\r\nimport store from \"../../store\";\r\n\r\nconst API_KEY = \"e439cc3bb62f4282847a5012c7511e5f\";\r\n\r\nconst {\r\n  OPEN_MOVIE_MODAL, \r\n  FETCH_MOVIE_DATA, \r\n  CLOSE_MOVIE_MODAL,\r\n  SHOW_ERROR,\r\n  FETCH_CREDITS\r\n} = MOVIE_FETCH;\r\n\r\nconst openMovieModal = () => {\r\n  return {\r\n    type: OPEN_MOVIE_MODAL\r\n  }\r\n}\r\n\r\nconst fetchMovie = (data) => {\r\n  return {\r\n    type: FETCH_MOVIE_DATA,\r\n    data\r\n  }\r\n}\r\n\r\nconst fetchCredits = (data) => {\r\n  return {\r\n    type: FETCH_CREDITS,\r\n    data\r\n  }\r\n}\r\n\r\nexport const closeMovieModal = () => {\r\n  return {\r\n    type: CLOSE_MOVIE_MODAL\r\n  }\r\n}\r\n\r\nconst showError = () => {\r\n  return {\r\n    type: SHOW_ERROR\r\n  }\r\n}\r\n\r\nexport const fetchThunkMovie = (movieId) => {\r\n  store.dispatch(openMovieModal());\r\n\r\n  return (dispatch) => {\r\n    return fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&append_to_response=videos`)\r\n      .then(\r\n        res => res.json(),\r\n        err => dispatch(showError())\r\n      )\r\n      .then(data => {\r\n        const editedData = {\r\n            background: `https://image.tmdb.org/t/p/w500/${data.backdrop_path}`,\r\n            poster: `https://image.tmdb.org/t/p/w500/${data.poster_path}`,\r\n            video: data.videos.results[0].key,\r\n            rating: 6.7,\r\n            plot: data.overview,\r\n            title: data.title,\r\n            votes: data.vote_count,\r\n            genre: data.genres.map(el => el.name).join(\", \"),\r\n            extPlot: data.overview,\r\n            releaseData: data.release_date,\r\n            revenue: data.revenue,\r\n            runtime: data.runtime,\r\n            imdbId: data.imdb_id\r\n        }\r\n        dispatch(fetchMovie(editedData));\r\n      })\r\n      .catch(err => dispatch(showError()));\r\n  }\r\n}\r\n\r\nexport const fetchThunkMovieCredits = (movieId) => {\r\n  return (dispatch) => {\r\n    return fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`)\r\n      .then(\r\n        res => res.json(),\r\n        err => dispatch(showError())\r\n      )\r\n      .then(data => {\r\n        console.log(data);\r\n        const editedData = {\r\n          stars: data.cast.slice(0, 4).map(el => el.name).join(\", \"),\r\n          directors: data.crew[0].name\r\n        }\r\n        dispatch(fetchCredits(editedData));\r\n      })\r\n  } \r\n}","import { FAVORITE } from \"../../constants\";\r\n\r\nconst { ADD_MOVIE, GO_TO_FAVORITES, CLOSE_FAVORITE, REMOVE_FROM_FAVORITE } = FAVORITE;\r\n\r\n\r\nexport const addToFavorite = (data) => {\r\n  return {\r\n    type: ADD_MOVIE,\r\n    data\r\n  }\r\n}\r\n\r\nexport const goToFavorite = () => {\r\n  return {\r\n    type: GO_TO_FAVORITES\r\n  }\r\n}\r\n\r\nexport const closeFavorite = () => {\r\n  return {\r\n    type: CLOSE_FAVORITE\r\n  }\r\n}\r\n\r\nexport const removeFromFavorite = (id) => {\r\n  return {\r\n    type: REMOVE_FROM_FAVORITE,\r\n    movieId: id\r\n  }\r\n}","import { SET_MOVIES_FILTER } from \"../../constants\";\r\n\r\nexport const setMovieFilter = (filter) => {\r\n  return {\r\n    type: SET_MOVIES_FILTER,\r\n    filter\r\n  }\r\n} \r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport SearchBar from \"../../Components/Header/SearchBar\";\r\n\r\nimport { thunkFetchMoviesAction } from \"../../Actions/fetchMovies\";\r\nimport { closeMovieModal } from \"../../Actions/movieModal\";\r\nimport { closeFavorite } from \"../../Actions/favoriteMovies\";\r\nimport { setMovieFilter } from \"../../Actions/filters\";\r\nimport { resetCurrentPage } from \"../../Actions/pagination\";\r\nimport { setSearchInput } from \"../../Actions/searchInput\";\r\n\r\nconst SearchBarContainer = ({\r\n  fetchMovies,\r\n  closeModal,\r\n  closeFavorite,\r\n  setFilter,\r\n  setInput,\r\n  resetCurrentPage\r\n}) => {\r\n  \r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (!searchInput) return;\r\n\r\n    closeModal();\r\n    closeFavorite();\r\n    setFilter(`Search Results related to \"${searchInput}\"`);\r\n    resetCurrentPage();\r\n\r\n    fetchMovies(`search/movie`, searchInput);\r\n    setInput(searchInput);\r\n    setSearchInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <SearchBar\r\n      value={searchInput}\r\n      onChange={data => setSearchInput(data)}\r\n      onSubmit={handleSubmit}\r\n    />\r\n  );\r\n};\r\n\r\nSearchBarContainer.propTypes = {\r\n  fetchMovies: PropTypes.func.isRequired,\r\n  closeModal: PropTypes.func.isRequired,\r\n  closeFavorite: PropTypes.func.isRequired,\r\n  setFilter: PropTypes.func.isRequired,\r\n  resetCurrentPage: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchMovies: (type, typeInput) =>\r\n    dispatch(thunkFetchMoviesAction(type, typeInput)),\r\n  closeModal: () => dispatch(closeMovieModal()),\r\n  closeFavorite: () => dispatch(closeFavorite()),\r\n  setFilter: filter => dispatch(setMovieFilter(filter)),\r\n  resetCurrentPage: () => dispatch(resetCurrentPage()),\r\n  setInput: (data) => dispatch(setSearchInput(data))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(SearchBarContainer);\r\n","import { SET_SEARCH_INPUT } from \"../../constants\";\r\n\r\nexport const setSearchInput = (data) => {\r\n  return {\r\n    type: SET_SEARCH_INPUT,\r\n    data\r\n  }\r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Title = ({onClick}) => {\r\n  return (\r\n    <div className=\"header__title\" onClick={onClick}>\r\n      <NavLink to=\"/\" activeStyle={{\r\n        width: \"100%\", display: \"block\", textDecoration: \"none\"}}>\r\n        <h1 className=\"header__text\">\r\n          Movie Finder\r\n        </h1>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { thunkFetchMoviesAction } from \"../../Actions/fetchMovies\";\r\nimport { setMovieFilter } from \"../../Actions/filters\";\r\nimport { closeMovieModal } from \"../../Actions/movieModal\";\r\nimport { closeFavorite } from \"../../Actions/favoriteMovies\";\r\nimport { resetCurrentPage } from \"../../Actions/pagination\";\r\n\r\nimport Title from \"../../Components/Header/Title\";\r\n\r\nconst TitleContainer = ({fetchData, setFilter, closeFavorite, resetCurrentPage, closeModal}) => {\r\n\r\n  const handleTitleClick = () => {\r\n    setFilter(\"New Releases\");\r\n    fetchData(\"movie/now_playing\");\r\n    closeFavorite();\r\n    resetCurrentPage();\r\n    closeModal();\r\n  }\r\n\r\n  return (\r\n    <Title onClick={handleTitleClick}/>\r\n  )\r\n}\r\n\r\n\r\nTitleContainer.propTypes = {\r\n  fetchData: PropTypes.func.isRequired,\r\n  setFilter: PropTypes.func.isRequired,\r\n  resetCurrentPage: PropTypes.func.isRequired,\r\n  closeModal: PropTypes.func.isRequired,\r\n  closeFavorite: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchData: (url) => dispatch(thunkFetchMoviesAction(url)),\r\n    setFilter: (filter) => dispatch(setMovieFilter(filter)),\r\n    resetCurrentPage: () => dispatch(resetCurrentPage()),\r\n    closeModal: () => dispatch(closeMovieModal()),\r\n    closeFavorite: () => dispatch(closeFavorite()),\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(TitleContainer)","import React from \"react\";\r\n\r\nimport SearchBarContainer from \"../../Containers/SearchBarContainer/SearchBarContainer\";\r\nimport TitleContainer from \"../../Containers/Header/TitleContainer\";\r\n\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <TitleContainer />\r\n      <SearchBarContainer />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst MovieFiltersItem = ({filter, isSidePanelShown}) => {\r\n  return (\r\n    <li\r\n      className={`movie-filters__item ${filter\r\n        .toLowerCase()\r\n        .split(\" \")\r\n        .join(\"-\")}`}\r\n      style={{opacity: isSidePanelShown ? \"1\": \"\" }}\r\n    >\r\n      <Link\r\n        to={`/${filter.replace(/\\s/g, \"\")}`}\r\n      >\r\n        <button type=\"button\" className=\"movie-filters__btn-link\">{filter}</button>\r\n      </Link>\r\n      <FontAwesomeIcon icon={faArrowRight} className=\"movie-filters__icon\" />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MovieFiltersItem;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport uuid from \"uuid\";\r\n\r\nimport MovieFiltersItem from \"../../Components/SidePanel/MovieFiltersItem\";\r\n\r\nimport { thunkFetchMoviesAction } from \"../../Actions/fetchMovies\";\r\nimport { setMovieFilter } from \"../../Actions/filters\";\r\nimport { closeMovieModal } from \"../../Actions/movieModal\";\r\nimport { goToFavorite, closeFavorite } from \"../../Actions/favoriteMovies\";\r\nimport { setTotalPages, resetCurrentPage } from \"../../Actions/pagination\";\r\n\r\nimport { getPagesNumbers } from \"../../Reducers/index\";\r\n\r\nconst filters = {\r\n  \"New Releases\": \"movie/now_playing\",\r\n  \"Trending\": \"trending/movie/week\",\r\n  \"Coming Soon\": \"movie/upcoming\",\r\n  \"Favourites\": \"\"\r\n};\r\n\r\nclass MovieFilters  extends React.Component {\r\n\r\n  //helper functions to be invoked to avoid code repeating;\r\n  dispatchFuncs(filter) {\r\n    this.props.setFilter(filter);\r\n    this.props.fetchMovies(filters[filter]);\r\n    this.props.closeFavorite();\r\n    this.props.resetCurrentPage();\r\n    this.props.closeModal();\r\n  }\r\n  \r\n  handleClick(e) {\r\n    let target = e.target.closest(\"li\");\r\n\r\n    if(!target) return;\r\n\r\n    if (target.classList.contains(\"new-releases\")) {\r\n      this.dispatchFuncs(\"New Releases\");\r\n    } \r\n\r\n    else if (target.classList.contains(\"trending\")) {\r\n        this.dispatchFuncs(\"Trending\");\r\n    } \r\n\r\n    else if(target.classList.contains(\"coming-soon\")) {\r\n        this.dispatchFuncs(\"Coming Soon\");\r\n    } \r\n    \r\n    else if(target.classList.contains(\"favourites\")) {\r\n      this.props.setFilter(\"Favourites\");\r\n      this.props.closeModal();\r\n      this.props.resetCurrentPage();\r\n      this.props.setPagesNumbers(this.props.pagesNumber);\r\n      this.props.goToFavorite();\r\n    }\r\n  \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ul className=\"movie-filters__list\" onClick={(e) => this.handleClick(e)}>\r\n        {Object.keys(filters).map(el => {\r\n          return (\r\n            <MovieFiltersItem \r\n              key={uuid.v4()} \r\n              filter={el}\r\n              isSidePanelShown={this.props.isSidePanelShown}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n};\r\n\r\nMovieFilters.propTypes = {\r\n  pagesNumber: PropTypes.number.isRequired,\r\n  fetchMovies: PropTypes.func.isRequired,\r\n  setFilter: PropTypes.func.isRequired,\r\n  closeModal: PropTypes.func.isRequired,\r\n  goToFavorite: PropTypes.func.isRequired,\r\n  closeFavorite: PropTypes.func.isRequired,\r\n  setPagesNumbers: PropTypes.func.isRequired,\r\n  resetCurrentPage: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    pagesNumber: getPagesNumbers(state),\r\n    isSidePanelShown: state.ui.isSidePanelShown\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchMovies: (url) => dispatch(thunkFetchMoviesAction(url)),\r\n    setFilter: (filter) => dispatch(setMovieFilter(filter)),\r\n    closeModal: () => dispatch(closeMovieModal()),\r\n    goToFavorite: () => dispatch(goToFavorite()),\r\n    closeFavorite: () => dispatch(closeFavorite()),\r\n    setPagesNumbers: (data) => dispatch(setTotalPages(data)),\r\n    resetCurrentPage: () => dispatch(resetCurrentPage())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieFilters);\r\n","import React from \"react\";\r\n\r\nconst SomeBlock = () => {\r\n\r\n  return (\r\n    <div className=\"some-block\">\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SomeBlock;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport MovieFilters from \"../../Containers/SidePanel/MovieFilters\";\r\nimport SomeBlock from \"./SomeBlock\";\r\n\r\nimport \"./SidePanel.css\";\r\n\r\nconst SidePanel = ({isShown}) => {\r\n  \r\n  let barStyle = {\r\n    width: \"200px\"\r\n  }\r\n\r\n  barStyle = isShown ? barStyle : {};\r\n\r\n  return (\r\n      <div className=\"page__sidebar\" style={barStyle}>\r\n        <MovieFilters />\r\n        <SomeBlock />\r\n      </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isShown: state.ui.isSidePanelShown\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(SidePanel);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBookmark } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\n\r\nconst MovieCard = ({ data, onClick, onBookmarkClick, isBookMarkAdded }) => {\r\n\r\n  const rateMarkColor =\r\n    data.rating < 6 ? \"tomato\" : data.rating >= 7 ? \"#2db92d\" : \"#FFB10A\";\r\n\r\n  return (\r\n    <div className=\"movie-card\" onClick={(e) => {\r\n      if(e.target.closest(\".movie-card__add-favorite\")) return;\r\n      onClick(data.id)\r\n      }}>\r\n      <span\r\n        className=\"movie-card__rate-mark\"\r\n        style={{ backgroundColor: rateMarkColor }}\r\n      >\r\n        {data.rating}\r\n      </span>\r\n      <FontAwesomeIcon \r\n        icon={faBookmark} \r\n        className=\"movie-card__add-favorite\" \r\n        onClick={() => onBookmarkClick(isBookMarkAdded, data)}\r\n        style={{color: isBookMarkAdded ? \"#228b22\" : \"#F83745\"}}\r\n      />\r\n      <div className=\"movie-card__poster\">\r\n        <img src={data.poster} alt=\"film-poster\" className=\"movie-card__img\" />\r\n      </div>\r\n      <div className=\"movie-card__title\">\r\n        <h3 className=\"movie-card__title-text\">\r\n          {data.title\r\n            .split(\" \")\r\n            .slice(0, 3)\r\n            .join(\" \")}\r\n        </h3>\r\n        <p className=\"movie-card__text\">{data.title}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMovieCard.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  onBookmarkClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default MovieCard;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport MovieCard from \"../../Components/MovieShowCase/MovieCard\";\r\n\r\nimport { fetchThunkMovie, fetchThunkMovieCredits } from \"../../Actions/movieModal\";\r\nimport { addToFavorite, removeFromFavorite } from \"../../Actions/favoriteMovies\";\r\nimport { getFavoriteMovies } from \"../../Reducers\";\r\n\r\nclass FilmCardsContainer extends React.Component {\r\n\r\n  handleBookMarkClick = (isActive, data) => {\r\n    \r\n    if(!isActive) {\r\n      this.props.addToFavorite(data);\r\n    } else {\r\n      this.props.removeFromFavorite(data.id);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      fetchedMovies, \r\n      fetchMovie, \r\n      fetchMovieCredits,\r\n      favoriteMovies, \r\n      isFavoritesOpen,\r\n      activeBookMarks\r\n    } = this.props;\r\n    \r\n    //depending on if we went to favorite movies choose correct movies set\r\n    const movies = isFavoritesOpen ? favoriteMovies : fetchedMovies;\r\n\r\n    if (!Object.keys(movies).length) return null;\r\n    \r\n    return (\r\n      <div className=\"movies-container\">\r\n        {Object.keys(movies).map(key => {\r\n          return (\r\n            <MovieCard\r\n              data={movies[key]}\r\n              isBookMarkAdded={activeBookMarks.includes(+key)}\r\n              key={movies[key].id}\r\n              onClick={(id) => {\r\n                fetchMovie(id);\r\n                fetchMovieCredits(id);\r\n              }}\r\n              onBookmarkClick={this.handleBookMarkClick}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFilmCardsContainer.propTypes = {\r\n  addToFavorite: PropTypes.func.isRequired,\r\n  removeFromFavorite: PropTypes.func.isRequired,\r\n  fetchMovieCredits: PropTypes.func.isRequired,\r\n  isFavoritesOpen: PropTypes.bool.isRequired,\r\n  fetchedMovies: PropTypes.object.isRequired,\r\n  favoriteMovies: PropTypes.object.isRequired,\r\n  fetchMovie: PropTypes.func.isRequired,\r\n  activeBookMarks: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    fetchedMovies: state.page.movies.fetchedData,\r\n    isFavoritesOpen: state.page.favorite.isFavoritesOpen,\r\n    activeBookMarks: state.page.favorite.activeBookMarks,\r\n    favoriteMovies: getFavoriteMovies(state)\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchMovie: movieId => dispatch(fetchThunkMovie(movieId)),\r\n  fetchMovieCredits: (movieId) => dispatch(fetchThunkMovieCredits(movieId)),\r\n  addToFavorite: (data) => dispatch(addToFavorite(data)),\r\n  removeFromFavorite: (id) => dispatch(removeFromFavorite(id))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FilmCardsContainer);\r\n","import React from \"react\";\r\n\r\nimport \"./Pagination.css\";\r\n\r\nconst Pagination = ({onClick, pagesLayout, pageData}) => {\r\n  return (\r\n    <>\r\n      <nav aria-label=\"Page navigation example\" className=\"pagination-nav\">\r\n        <ul\r\n          className=\"pagination-nav__list\"\r\n          onClick={onClick}\r\n        >\r\n          {pagesLayout.map((page, i) => {\r\n            if (page === \"Left\") {\r\n              return (\r\n                <li className=\"pagination-nav__item\" key={i} data-id=\"Left\">\r\n                  <button className=\"pagination-nav__button \"  aria-label=\"Previous\">\r\n                    &laquo;\r\n                  </button>\r\n                </li>\r\n              );\r\n            }\r\n            if (page === \"Right\") {\r\n              return (\r\n                <li className=\"pagination-nav__item\" key={i} data-id=\"Right\">\r\n                  <button className=\"pagination-nav__button\" aria-label=\"Next\">\r\n                    &raquo;\r\n                  </button>\r\n                </li>\r\n              );\r\n            }\r\n\r\n            const btnActive = pageData.currentPage === +page ? \"pagination-nav__button pagination-nav__button_active\" : \"pagination-nav__button\";\r\n\r\n            return (\r\n              <li className=\"pagination-nav__item\" key={i} data-id={+page}>\r\n                <button className={btnActive}>\r\n                  {page}\r\n                </button>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default Pagination;\r\n\r\n","function range(start, end, step = 1) {\r\n\r\n  let arr = [];\r\n\r\n  for(let i = start; i <= end; i += step ) {\r\n      arr.push(i);\r\n  }\r\n\r\n  return arr;\r\n}\r\n\r\nexport default range;","import range from \"./range\";\r\n\r\nfunction getPagesLayout({\r\n    currentPage = 1, \r\n    pageNeighboursNumber = 1, \r\n    totalPages=0}) {\r\n  \r\n  const totalNumbers = (pageNeighboursNumber * 2) + 3;\r\n  const totalBlocks = totalNumbers + 2;\r\n\r\n  if(totalBlocks < totalPages) {\r\n\r\n    const leftBound = currentPage - pageNeighboursNumber;\r\n    const rightBound = currentPage + pageNeighboursNumber;\r\n    const beforeLastPage = totalPages - 1;\r\n\r\n    const startPage = Math.max(2, leftBound);\r\n    const endPage = rightBound < beforeLastPage ? rightBound : beforeLastPage;\r\n \r\n    let pages = range(startPage, endPage);\r\n    const paginOffset = totalNumbers - pages.length - 1;\r\n\r\n    const hasSpillLeft = startPage > 2;\r\n    const hasSpillRight = endPage < beforeLastPage;\r\n\r\n    if(hasSpillLeft && !hasSpillRight) {\r\n        const extraPages = range(startPage - paginOffset, startPage - 1);\r\n        pages = [\"Left\", ...extraPages, ...pages];\r\n    }\r\n    if(!hasSpillLeft && hasSpillRight) {\r\n        const extraPages = range(endPage + 1, endPage + paginOffset);\r\n        pages = [...pages, ...extraPages, \"Right\"];\r\n    } \r\n    if(hasSpillLeft && hasSpillRight) {\r\n        pages = [\"Left\", ...pages, \"Right\"];\r\n    }\r\n\r\n    return [1, ...pages, totalPages];\r\n  }\r\n  return [...range(1, totalPages)];\r\n}\r\n\r\nexport default getPagesLayout;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Pagination from \"../../Components/Pagination/Pagination\";\r\n\r\nimport { thunkFetchMoviesAction } from \"../../Actions/fetchMovies\";\r\nimport { goToNextPage, goBackPage, goToChosenPage } from \"../../Actions/pagination\";\r\n\r\nimport getPageLayout from \"../../../utils/getPageLayout\";\r\n\r\nconst filters = {\r\n  \"New Releases\": \"movie/now_playing\",\r\n  \"Trending\": \"trending/movie/week\",\r\n  \"Coming Soon\": \"movie/upcoming\",\r\n  \"Favourites\": \"\",\r\n  \"Watch Later\": \"\"\r\n};\r\n\r\n\r\n\r\nclass PaginationContainer extends React.Component {\r\n\r\n  handleClicks = e => {\r\n    const target = e.target.closest(\"li\");\r\n\r\n    if (!target) return;\r\n\r\n    if (target.dataset.id === \"Left\") {\r\n      this.props.goToPrevious();\r\n    } else if (target.dataset.id === \"Right\") {\r\n      this.props.goToNext();\r\n    } else {\r\n      this.props.goToChosen(+target.dataset.id);\r\n    }\r\n\r\n    if (!this.props.isFavoritesOpen) {\r\n\r\n      //if we don't go to favorite movies page so we can fetch \r\n      //data for requested page with certain number and the filter value;\r\n      if(this.props.filter.includes(\"Search\")) {\r\n        console.log(this.props.searchInput);\r\n        this.props.fetchData(\"search/movie\", this.props.searchInput);\r\n      } else {\r\n        this.props.fetchData(filters[this.props.filter]);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    //getting pagination layout using current data\r\n    const pages = getPageLayout(this.props.pageData);\r\n    return (\r\n      <Pagination \r\n        onClick={this.handleClicks} \r\n        pagesLayout={pages} \r\n        pageData={this.props.pageData}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nPaginationContainer.propTypes = {\r\n  pageData: PropTypes.object.isRequired,\r\n  goToNext: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  searchInput: PropTypes.string.isRequired,\r\n  isFavoritesOpen: PropTypes.bool.isRequired,\r\n  goToPrevious: PropTypes.func.isRequired,\r\n  goToChosen: PropTypes.func.isRequired,\r\n  fetchData: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    pageData: state.page.pageState,\r\n    filter: state.page.movieFilter,\r\n    isFavoritesOpen: state.page.favorite.isFavoritesOpen,\r\n    searchInput: state.page.searchInput\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    goToNext: () => dispatch(goToNextPage()),\r\n    goToPrevious: () => dispatch(goBackPage()),\r\n    goToChosen: data => dispatch(goToChosenPage(data)),\r\n    fetchData: (partUrl, input) => dispatch(thunkFetchMoviesAction(partUrl, input))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PaginationContainer);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FilmCardsContainer from \"../../Containers/FilmCardsContainer/FilmCardsContainer\";\r\nimport PaginationContainer from \"../../Containers/Pagination/PaginationContainer\";\r\n\r\nimport \"./MovieShowCase.css\";\r\n\r\nconst MovieShowCase = ({ movieFilter }) => {\r\n\r\n    return (\r\n        <div className=\"movies-showcase\">\r\n            <h2 className=\"movie-showcase__movies-type\">{movieFilter}</h2>\r\n            <FilmCardsContainer />\r\n            <PaginationContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nMovieShowCase.propTypes = {\r\n    movieFilter: PropTypes.string.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        movieFilter: state.page.movieFilter\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(MovieShowCase);","function getNormalDuration(num) {\r\n\r\n  let hour = Math.floor(num / 60);\r\n  let min = num % 60;\r\n\r\n  return `${hour}h ${min}min`;\r\n}\r\n\r\nexport default getNormalDuration;","const getNormalRevenueValue = (value) => {\r\n   if(value.length < 4) return `$ ${value}`;\r\n   \r\n   let valueStr = value.split(\"\").reverse();\r\n\r\n   let res = \"\";\r\n   \r\n   for(let i = 0; i < value.length; i += 3) {\r\n     res += valueStr.slice(i, i + 3).join(\"\") + \",\";\r\n   }\r\n\r\n   return `$${res.split(\"\").reverse().join(\"\").replace(/^,(\\d)/, \"$1\")}`;\r\n}\r\n\r\nexport default getNormalRevenueValue;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport getNormalDuration from \"../../../utils/getNormalDuration\";\r\nimport getNormalRevenueValue from \"../../../utils/getNormalRevenueValue\";\r\n\r\nimport \"./MovieInfoPage.css\";\r\n\r\nconst MovieInfoPage = ({ data }) => {\r\n  if(!data.plot) return null;\r\n\r\n  return (\r\n    <section className=\"movie-info\">\r\n      <div\r\n        className=\"movie-info__general\"\r\n        style={{ background: `url(${data.background}) center / cover no-repeat` }}\r\n      >\r\n        <div className=\"movie-info__general-overlap\"></div>\r\n        <iframe\r\n          title=\"trailer\"\r\n          className=\"trailer-frame\"\r\n          src={`https://www.youtube.com/embed/${data.video}`}\r\n          frameBorder=\"0\"\r\n          allow=\"accelerometer; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen\r\n        />\r\n        <section className=\"movie-inform__basic-inform\">\r\n          <p className=\"basic-inform__content\">\r\n            <span className=\"basic-inform__title\">Release:</span> \r\n            <span className=\"basic-inform__text\">{data.releaseData}</span>\r\n          </p>\r\n          <p className=\"basic-inform__content\">\r\n            <span className=\"basic-inform__title\">Revenue:</span>\r\n            <span className=\"basic-inform__text\">{getNormalRevenueValue(data.revenue+\"\")}</span>\r\n          </p>\r\n          <p className=\"basic-inform__content\">\r\n            <span className=\"basic-inform__title\">Runtime:</span>\r\n            <span className=\"basic-inform__text\">{getNormalDuration(data.runtime)}</span>\r\n          </p>\r\n          <p className=\"basic-inform__content\">\r\n            <span className=\"basic-inform__title\">imdb</span> \r\n            <a \r\n              href={`https://www.imdb.com/title/${data.imdbId}`}\r\n              className=\"basic-inform__link\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              {data.imdbId}</a>\r\n          </p>\r\n        </section>\r\n        <div className=\"plot\">\r\n          <p className=\"plot__text\">{data.plot.slice(0, 100) + \"...\"}</p>\r\n        </div>\r\n      </div>\r\n      <section className=\"movie-info__detailed\">\r\n        <header className=\"movie-info__header\">\r\n          <h1 className=\"movie-info__header-text\">{data.title}</h1>\r\n        </header>\r\n        <p class=\"movie-info__short-desc\">\r\n          <span className=\"movie-info__imdb\">imdb</span>\r\n          <span className=\"movie-info__rating\">{data.rating}</span>/10\r\n          <span className=\"movie-info__votes\">{data.votes} Votes</span>\r\n        </p>\r\n        <div className=\"movie-info__container\">\r\n          <section className=\"movie-info__poster-wrapper\">\r\n            <img\r\n              src={data.poster}\r\n              alt=\"poster of movie\"\r\n              className=\"movie-info__poster\"\r\n            />\r\n          </section>\r\n          <section className=\"movie-info__main\">\r\n            <div className=\"inform-block\">\r\n              <h6 className=\"inform-block__heading\">Directors</h6>\r\n              <p className=\"inform-block__text\">{data.directors}</p>\r\n            </div>\r\n            <div className=\"inform-block\">\r\n              <h6 className=\"inform-block__heading\">Genre</h6>\r\n              <p className=\"inform-block__text\">{data.genre}</p>\r\n            </div>\r\n            <div className=\"inform-block\">\r\n              <h6 className=\"inform-block__heading\">Stars</h6>\r\n              <p className=\"inform-block__text\">{data.stars}</p>\r\n            </div>\r\n          </section>\r\n        </div>\r\n        <div className=\"extended-plot\">\r\n          <p className=\"extended-plot__text\">{data.extPlot}</p>\r\n        </div>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nMovieInfoPage.defaultProps = {\r\n  data: {\r\n    \r\n  }\r\n};\r\n\r\nMovieInfoPage.propTypes = {\r\n  data: PropTypes.shape({\r\n    background: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    rating: PropTypes.number.isRequired,\r\n    plot: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    votes: PropTypes.number.isRequired,\r\n    directors: PropTypes.string.isRequired,\r\n    genre: PropTypes.string.isRequired,\r\n    stars: PropTypes.string.isRequired,\r\n    extPlot: PropTypes.string.isRequired,\r\n  })\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.page.movie.movieDetails\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(MovieInfoPage);\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <span className=\"loader__content\"></span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader;","import React from \"react\";\r\n\r\nconst Error = () => {\r\n  return (\r\n    <div className=\"error\">\r\n      <h3 className=\"error__text\">You know, something actually went wrong...!!</h3>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Error;","import React from \"react\";\r\n\r\nimport \"./ShowSidePanelButton.css\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst ShowSidePanelButton = ({isShown, onClick}) => {\r\n  return (\r\n    <>\r\n      <button \r\n        type=\"button\" \r\n        className=\"show-bar-button\"\r\n        onClick={onClick}\r\n      >\r\n        {\r\n          isShown ?  \r\n          <FontAwesomeIcon \r\n            icon={faTimes} \r\n            className=\"show-bar-button__icon\" \r\n          /> :\r\n          <FontAwesomeIcon \r\n            icon={faBars} \r\n            className=\"show-bar-button__icon\" \r\n          />\r\n        }\r\n      </button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ShowSidePanelButton;","import { SIDE_PANEL } from \"../../constants\";\r\n\r\nconst { SET_VISIBILITY } = SIDE_PANEL;\r\n\r\nexport const setSidePanelVisivility = (value) => ({\r\n  type: SET_VISIBILITY,\r\n  value\r\n})","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ShowSidePanelButton from \"../../Components/ShowSidePanelButton/ShowSidePanelButton\";\r\n\r\nimport { setSidePanelVisivility } from \"../../Actions/sidePanel\";\r\n\r\n\r\n\r\nconst ShowSidePanelButtonContainer = ({setVisibility}) => {\r\n  \r\n  const [isShown, setIsShown] = useState(false);\r\n\r\n  const handleButtonClick = (e) => {\r\n    setIsShown(!isShown);\r\n    setVisibility(!isShown);\r\n  }\r\n\r\n  return (\r\n    <ShowSidePanelButton \r\n      isShown={isShown} \r\n      onClick={handleButtonClick}\r\n    />\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setVisibility: (value) => dispatch(setSidePanelVisivility(value))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ShowSidePanelButtonContainer);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport SidePanel from \"../../Components/SidePanel/SidePanel\";\r\nimport MovieShowCase from \"../../Components/MovieShowCase/MovieShowCase\";\r\nimport MovieInfoPage from \"../../Components/MovieInfoPage/MovieInfoPage\";\r\nimport Loader from \"../../Components/MainContent/Loader\";\r\nimport Error from \"../../Components/MainContent/Error\";\r\nimport ShowSidePanelButtonContainer from \"../ShowSidePanelButtonContainer/ShowSidePanelButtonContainer\";\r\n\r\nimport \"../../Components/MainContent/MainContent.css\";\r\n\r\nconst MainContent = ({ isFetching, isErrored, isOpen, movieData}) => {\r\n  return (\r\n    <main className=\"page-wrapper\">\r\n      {isFetching ? (\r\n        <Loader />\r\n      ) : isErrored ? (\r\n        <Error />\r\n      ) : (\r\n        <>\r\n          <ShowSidePanelButtonContainer />\r\n          <SidePanel />\r\n          {!isOpen ? <MovieShowCase /> : <MovieInfoPage data={movieData}/>}\r\n        </>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\n\r\nMainContent.propTypes = {\r\n  isOpen: PropTypes.bool.isRequired,\r\n  movieData: PropTypes.object.isRequired,\r\n  isFetching: PropTypes.bool.isRequired,\r\n  isErrored: PropTypes.bool.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const isFetching = state.page.movies.isFetching || state.page.movie.isFetching;\r\n  const isErrored = state.page.movies.isErrored || state.page.movie.isErrored;\r\n\r\n  return {\r\n    isOpen: state.page.movie.isOpen,\r\n    movieData: state.page.movie.movieDetails,\r\n    isFetching,\r\n    isErrored\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(MainContent);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Header from \"../../Components/Header/Header\";\r\nimport MainContent from \"../MainContent/MainContent\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport { thunkFetchMoviesAction } from \"../../Actions/fetchMovies\";\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchMovies(\"movie/now_playing\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"whole-page-wrapper\">\r\n        <Header />\r\n        <MainContent />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  fetchMovies: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchMovies: (type, typeInput) => dispatch(thunkFetchMoviesAction(type, typeInput))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./app/Containers/App/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport store from \"./store\";\r\n\r\nconst Root = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Route path=\"/:filter?\" component={App} />\r\n      </Router>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n  <Root />,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}